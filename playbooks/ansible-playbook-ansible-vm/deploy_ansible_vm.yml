---
# Example playbook for ansible-role-deploy-vms
# ansible-playbook -i inventory/ansible-vm.yml playbooks/ansible-playbook-ansible-vm/deploy_ansible_vm.yml

# ===========================================================================
# Deploy an Ansible controller VM to a vCenter server
# ===========================================================================
- name: Deploy VMs
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  module_defaults:
    group/vmware:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: false
  tags: play_deploy_vms

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - { role: jedimt.deploy_vms,
        ansible_password: "{{ vault_ansible_password }}",
        vcenter_datacenter: 'SantaClara',
        vcenter_folder: '/{{ vcenter_datacenter }}/vm/Ansible',
        vcenter_cluster: 'Production',
        vcenter_hostname: 'tmevcsa.sc0.nebulon.com',
        guest_network: 'VM Network',
        guest_template: 'ubuntu22.04.2_local'
    }

# ===========================================================================
# Customize VMs
# ===========================================================================
- name: Customize deployed VMs
  hosts: servers
  gather_facts: false
  tags: play_customize_vms

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    # If passwordless SSH not set up, use ansible_password to authenticate
    - { role: jedimt.customize_vms,
        ansible_password: "{{ vault_ansible_password }}"
    }

# ===========================================================================
# Update known hosts file
# ===========================================================================
- name: Sync known hosts
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags: play_ssh_sync

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - { role: jedimt.ssh
    }

# ===========================================================================
# Copy SSH keys to target hosts for passwordless authentication
# ===========================================================================
- name: Copy pubkeys to target hosts
  hosts: servers
  gather_facts: false
  become: false
  tags: play_ssh_setup

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - jedimt.authorized_keys

# ===========================================================================
# Install prerequisite packages and software
# ===========================================================================
- name: Install prerequisite packages and software
  hosts: servers
  gather_facts: true
  become: false
  tags: play_prereq_install

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  vars:
    ovf_url: "http://homes.sc0.nebulon.com/aaron/files/vmware/ovftool45/VMware-ovftool-4.5.0-20459872-lin.x86_64.zip"

  tasks:
    - name: Install Python modules
      ansible.builtin.pip:
        name:
          - nebpyclient==2.0.8  # Nebulon playbooks
          - pyvmomi==8.0.0.1.2  # VMware playbooks
          - jmespath==1.0.1     # VMware playbooks

    - name: Install Apt packages
      ansible.builtin.apt:
        name:
          - sshpass
          - unzip
        state: present

    # This set of steps should be turned into a role in the future
    - name: Download OVFTool
      ansible.builtin.unarchive:
        src: "{{ ovf_url }}" # This assumes the package is on a web server in the environment
        dest: /usr/bin/
        mode: '0755'
        remote_src: true

    - name: Add another bin dir to system-wide $PATH.
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: '^(PATH=\")({{ new_path }}:)?((?(2).*?(?!(?:.\"))|.*?(?!(?:{{ new_path }}))))(:{{ new_path }})?((?(4).*|\"))'
        line: '\1\3:{{ new_path }}\5'
        backrefs: true
      vars:
        new_path: /usr/bin/ovftool # Default location for OVFTool in my playbooks

# ===========================================================================
# Install and configure Ansible
# ===========================================================================
- name: Install and configure Ansible on Ansible controller
  hosts: servers
  gather_facts: true
  become: false
  tags: play_ansible_install

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - geerlingguy.ansible

  tasks:
    - name: Create directory for repo
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/github"
        state: directory
        mode: '0644'

    - name: Clone Ansible TME repo
      ansible.builtin.git:
        repo: 'https://github.com/jedimt/ansible-playbooks-nebulon.git'
        dest: "{{ ansible_env.HOME }}/github"
        version: master
      tags: git

    - name: Create Ansible vault password file
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/github/.vault_pass"
        content: "{{ vault_vault_password }}"
        mode: '0644'

    # To-do: This isn't installing the Nebulon collection for some reason.
    - name: Install required collections and roles from Galaxy
      community.general.ansible_galaxy_install:
        type: both
        requirements_file: "{{ ansible_env.HOME }}/github/requirements.yml"

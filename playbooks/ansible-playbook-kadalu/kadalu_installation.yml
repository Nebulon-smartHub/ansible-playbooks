---
# This playbook creates a set of Nebulon volumes, exposes them to the nPod servers and then
# installs and configures Kadula.

# To-do list:
# Add WWN <-> SCSI dev mapping in ansible-role-linuxadd-scsi-dev to make more robust (currently hardcoded to last SCSI dev).
#   This will not always be the case and is fragile.
# Add ability to support more than one local volume per host at time
# Add abaility to support multiple Kadalu pools (with their respective volumes)

# Example invocation:
# ansible-playbook -i inventory/lenovo.yml playbooks/kadalu/kadalu_installation.yml

# ===========================================================================
# Create Nebulon Volumes
# ===========================================================================

- name: Create Nebulon Volumes
  hosts: localhost
  connection: local
  tags: play_neb_vols
  gather_facts: false

  # module_defaults requires nebulon.nebulon_on version 1.2.1 or later
  module_defaults:
    group/nebulon.nebulon_on.nebulon:
      neb_username: "{{ vault_neb_username }}"
      neb_password: "{{ vault_neb_password }}"

  vars_files:
    # Ansible vault with all required passwords
    - "/home/apatt/github/demopod-ansible/credentials.yml"

  vars:
    # State for all volumes (present|absent)
    volume_state: present

    # Specify LUN export method (does not affect underlying volume)
    # (present|all) -> All nPod servers can access export
    # (host) -> Make export available to a single host. Requires host_uuid
    # (local) -> Make export available only to the local host that owns the volume
    # (absent) -> Remove the volume export
    export_type: local

    # nPod name to use when managing volumes/exports
    npod_name: "K8s_Lenovo"

    host_uuid:

    # List of volumes to manage (create or remove)
    volumes:
      - name: "server-10-local-kadalu"
        size: 1000000000000
        mirrored: true
        owner_spu_serial: 01231C5BA68435FC19
        backup_spu_serial: 012386435A39449519
        state: "{{ volume_state }}"

      - name: "server-11-local-kadalu"
        size: 1000000000000
        mirrored: true
        owner_spu_serial: 01234C1DDA95332EEE
        backup_spu_serial: 01236AE13059FD35EE
        state: "{{ volume_state }}"

      - name: "server-12-local-kadalu"
        size: 1000000000000
        mirrored: true
        owner_spu_serial: 01236AE13059FD35EE
        backup_spu_serial: 01234C1DDA95332EEE
        state: "{{ volume_state }}"

  roles:
    - { role: ansible-role-nebulon-manage-volumes }

  # tasks:
  #   - name: Find WWN for new volumes from Nebulon ON
  #     nebulon.nebulon_on.neb_volume_info:
  #       neb_username: "{{ vault_neb_username }}"
  #       neb_password: "{{ vault_neb_password }}"
  #       volume_name: "{{ item.name }}"
  #     loop: "{{ volumes }}"
  #     loop_control:
  #       label: "{{ item.name }}"
  #     register: nebulon_volume_info
  #     delegate_to: localhost
  #     connection: local

  #   # We will need the volume UUIDs later to match SCSI WWNs to Nebulon volumes
  #   - name: Get SCSI device WWN list from Nebulon ON output
  #     ansible.builtin.set_fact:
  #       nebulon_on_wwn: "{{ nebulon_volume_info.results | \
  #                           map(attribute='volumes') | flatten | \
  #                           map(attribute='wwn') | list }}"


# ===========================================================================
# Mount new volumes to Linux hosts
# ===========================================================================

- name: Mount new volumes to hosts
  hosts: k8s_nodes
  tags: play_scsi_dev
  gather_facts: true

  roles:
    - { role: ansible-role-linux-add-scsi-dev }

# ===========================================================================
# Install Kadalu and optional demo application
# ===========================================================================

- name: Install Kadalu
  hosts: k8s_master
  tags: play_kadalu_install
  gather_facts: true

  vars_files:
    # Ansible vault with all required passwords
    - "/home/apatt/github/demopod-ansible/credentials.yml"

  roles:
    - { role: ansible-role-kadalu, npod_name: "K8s_Lenovo" }

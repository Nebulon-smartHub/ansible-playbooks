---
# This playbook does a full end-to-end installation of a virtualized K8s deployment
# including the VMware CSI driver and Kube-Prometheus.

# Example Invocation:
# ansible-playbook -i inventory/lenovo-brb.yml playbooks/ansible-playbook-vmware-fullstack/vmware_fullstack_playbook_phase2_vsphere7.yml

# ===========================================================================
# Deploy VMs
# ===========================================================================
- name: Deploy VMs
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  module_defaults:
    group/vmware:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: false
  tags: play_deploy_vms

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - { role: ansible-role-deploy-vms,
        ansible_password: "{{ vault_ansible_password }}"
    }

# ===========================================================================
# Customize VMs
# ===========================================================================
- name: Customize deployed VMs
  hosts: servers
  gather_facts: false
  tags: play_customize_vms

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    # If passwordless SSH not set up, use ansible_password to authenticate
    - { role: ansible-role-customize-vms,
        ansible_password: "{{ vault_ansible_password }}"
    }

# ===========================================================================
# Copy SSH keys to target hosts for passwordless authentication
# ===========================================================================
- name: Copy pubkeys to target hosts
  hosts: servers
  gather_facts: false
  tags: play_ssh_setup

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - ansible-role-authorized-keys

# ===========================================================================
# Update Ansible controller SSH keys
# ===========================================================================
- name: Update SSH keys for Ansible controller known_hosts
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags: play_ssh_sync

  roles:
    - ansible-role-ssh-update-known-hosts

# ===========================================================================
# Disable APT automatic updates/upgrades
# ===========================================================================
- name: Disable APT updates and upgrades
  hosts: servers
  gather_facts: false

  roles:
    - ansible-role-apt-disable-background-tasks

# ===========================================================================
# Install HAProxy on a VM
# ===========================================================================
- name: Install HAProxy on VM
  hosts: haproxy
  gather_facts: true
  tags: play_haproxy

  roles:
    - ansible-role-haproxy


# ===========================================================================
# Kubernetes pre-install tasks
# ===========================================================================
- name: Kubernetes pre-install tasks
  hosts: servers
  tags: k8s

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - ansible-role-kubernetes-prep

# ===========================================================================
# Create Kubernetes cluster
# ===========================================================================
- name: Create Kubernetes cluster
  hosts: k8s_master
  tags: play_create_k8s_cluster

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - ansible-role-kubernetes-create-cluster

# This play will only fire when multiple control nodes are to be configured
- name: Join additional control nodes to K8s cluster
  hosts: k8s_control
  tags: play_k8s_control

  tasks:
    - name: Test to see if additional control nodes already joined to cluster
      ansible.builtin.command:
        ls /etc/kubernetes
      register: kubedirtest
      failed_when: kubedirtest.rc > 2
      when: hostvars[groups['k8s_master'][0]]['loadbalancer']
      changed_when: false
      tags: cert_key

    - name: Run kubeadm join
      ansible.builtin.command:
        "{{ hostvars[groups['k8s_master'][0]]['kubeadm_join'] }} \
            --control-plane --certificate-key \
            {{ hostvars[groups['k8s_master'][0]]['kubeadm_cert_key'] }}"
      when:
        - "'pki' not in kubedirtest.stdout"
        - hostvars[groups['k8s_master'][0]]['loadbalancer']
      changed_when: true
      tags: cert_key

# ===========================================================================
# Install K8s CNI
# ===========================================================================
- name: Install K8s networking plugin
  hosts: k8s_master
  tags: play_k8s_network

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - ansible-role-kubernetes-network-plugin

# ===========================================================================
# Join nodes to Kubernetes cluster
# ===========================================================================
- name: Join Kubernetes nodes to cluster
  hosts: k8s_nodes
  tags: play_k8s_nodes

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - ansible-role-kubernetes-join-nodes

# ===========================================================================
# Install MetalLB L2 load balancer
# ===========================================================================
- name: Install MetalLB load balancer
  hosts: k8s_master
  become: true
  tags: play_metallb

  roles:
    - ansible-role-kubernetes-metallb

# ===========================================================================
# Install the VMware CSI driver
# ===========================================================================
- name: VMware CSI driver install
  hosts: k8s_master
  become: true
  gather_facts: false
  tags: play_vmware_csi

  vars_files:
    # Ansible vault with all required passwords
    - "../../credentials.yml"

  roles:
    - { role: ansible-role-vmware-csi-deploy,
        vcenter_ip: "10.100.24.31",
        vcenter_hostname: "devvcsa.tme.nebulon.com",
        vcenter_datacenter: "SC0"
    }

# ===========================================================================
# Install Nginx ingress controller
# ===========================================================================
- name: Install nginx ingress controller
  hosts: k8s_master
  become: true
  gather_facts: false
  tags: play_nginx

  roles:
    - ansible-role-helm-install
    - ansible-role-kubernetes-nginx-ingress

# ===========================================================================
# Install Kube-Prometheus
# ===========================================================================
- name: Install the Kube-Prometheus project
  hosts: k8s_master
  gather_facts: true
  become: false
  tags: play_prometheus

  roles:
    - ansible-role-golang-install
    - { role: ansible-role-kubernetes-kube-prometheus,
        storage_class: "vmw-block-sc"
    }
